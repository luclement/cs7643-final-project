TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 21 files
Detected 29 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: .\AnimeGANv2.py
--------------------------------------------------------------------------------
.\AnimeGANv2.py:304:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
.\AnimeGANv2.py:343:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: .\pair_images.py
--------------------------------------------------------------------------------
.\pair_images.py:43:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: .\net\generator.py
--------------------------------------------------------------------------------
.\net\generator.py:19:11: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\net\generator.py:41:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\net\generator.py:44:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\net\generator.py:137:11: ERROR: Using member tf.contrib.layers.conv2d_transpose in deprecated module tf.contrib. tf.contrib.layers.conv2d_transpose cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\net\generator.py:142:22: WARNING: tf.contrib.layers.instance_norm requires manual check. (Manual edit required) `tf.contrib.layers.instance_norm` has been migrated to `tfa.layers.InstanceNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
.\net\generator.py:142:22: ERROR: Using member tf.contrib.layers.instance_norm in deprecated module tf.contrib. tf.contrib.layers.instance_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\net\generator.py:151:11: ERROR: Using member tf.contrib.layers.separable_conv2d in deprecated module tf.contrib. tf.contrib.layers.separable_conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\net\generator.py:159:22: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
.\net\generator.py:159:22: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: .\net\generator_lite.py
--------------------------------------------------------------------------------
.\net\generator_lite.py:25:11: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\net\generator_lite.py:47:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\net\generator_lite.py:50:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\net\generator_lite.py:153:11: ERROR: Using member tf.contrib.layers.conv2d_transpose in deprecated module tf.contrib. tf.contrib.layers.conv2d_transpose cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\net\generator_lite.py:158:22: WARNING: tf.contrib.layers.instance_norm requires manual check. (Manual edit required) `tf.contrib.layers.instance_norm` has been migrated to `tfa.layers.InstanceNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
.\net\generator_lite.py:158:22: ERROR: Using member tf.contrib.layers.instance_norm in deprecated module tf.contrib. tf.contrib.layers.instance_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\net\generator_lite.py:167:11: ERROR: Using member tf.contrib.layers.separable_conv2d in deprecated module tf.contrib. tf.contrib.layers.separable_conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\net\generator_lite.py:175:22: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
.\net\generator_lite.py:175:22: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: .\pb_model_tool\convert_ckpt_to_savermodel.py
--------------------------------------------------------------------------------
.\pb_model_tool\convert_ckpt_to_savermodel.py:48:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: .\tools\data_loader.py
--------------------------------------------------------------------------------
.\tools\data_loader.py:85:20: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------
File: .\tools\get_generator_ckpt.py
--------------------------------------------------------------------------------
.\tools\get_generator_ckpt.py:22:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: .\tools\ops.py
--------------------------------------------------------------------------------
.\tools\ops.py:38:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\tools\ops.py:43:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\tools\ops.py:60:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\tools\ops.py:64:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\tools\ops.py:143:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: '.'
================================================================================
--------------------------------------------------------------------------------
Processing file '.\\AnimeGANv2.py'
 outputting to 'tf\\AnimeGANv2.py'
--------------------------------------------------------------------------------

57:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
58:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
59:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
60:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
62:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
104:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
109:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
129:18: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
129:42: INFO: Added keywords to args of function 'tf.shape'
130:23: INFO: Added keywords to args of function 'tf.nn.moments'
135:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
141:15: INFO: Added keywords to args of function 'tf.gradients'
142:20: INFO: Added keywords to args of function 'tf.norm'
147:27: INFO: Added keywords to args of function 'tf.reduce_mean'
150:27: INFO: Added keywords to args of function 'tf.reduce_mean'
191:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
195:26: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
196:23: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
197:23: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
200:22: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
200:22: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
201:22: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
201:22: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
203:21: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
203:21: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
204:21: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
204:21: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
205:27: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
205:27: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
207:28: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
207:28: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
208:28: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
208:28: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
209:28: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
209:28: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
214:22: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
217:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
220:22: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
220:22: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
304:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
343:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
362:8: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
365:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\edge_smooth.py'
 outputting to 'tf\\edge_smooth.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\main.py'
 outputting to 'tf\\main.py'
--------------------------------------------------------------------------------

100:18: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
101:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
101:27: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\pair_images.py'
 outputting to 'tf\\pair_images.py'
--------------------------------------------------------------------------------

43:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\test.py'
 outputting to 'tf\\test.py'
--------------------------------------------------------------------------------

29:12: INFO: Renamed 'tf.profiler.profile' to 'tf.compat.v1.profiler.profile'
29:47: INFO: Renamed 'tf.profiler.ProfileOptionBuilder' to 'tf.compat.v1.profiler.ProfileOptionBuilder'
39:16: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
41:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
46:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
48:18: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
49:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
49:27: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\video2anime.py'
 outputting to 'tf\\video2anime.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\net\\discriminator.py'
 outputting to 'tf\\net\\discriminator.py'
--------------------------------------------------------------------------------

6:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\net\\generator.py'
 outputting to 'tf\\net\\generator.py'
--------------------------------------------------------------------------------

14:17: INFO: Added keywords to args of function 'tf.pad'
16:17: INFO: Added keywords to args of function 'tf.pad'
18:17: INFO: Added keywords to args of function 'tf.pad'
19:11: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
24:28: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

38:12: INFO: Added keywords to args of function 'tf.pad'
39:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
41:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
41:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
41:105: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

42:15: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
42:15: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
44:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
44:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
44:91: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
44:91: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
57:23: INFO: Added keywords to args of function 'tf.shape'
57:48: INFO: Added keywords to args of function 'tf.shape'
58:13: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
68:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
70:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
75:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
79:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
87:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
91:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
95:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
101:14: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
130:20: INFO: Added keywords to args of function 'tf.shape'
130:46: INFO: Added keywords to args of function 'tf.shape'
131:13: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
137:11: ERROR: Using member tf.contrib.layers.conv2d_transpose in deprecated module tf.contrib. tf.contrib.layers.conv2d_transpose cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
142:22: WARNING: tf.contrib.layers.instance_norm requires manual check. (Manual edit required) `tf.contrib.layers.instance_norm` has been migrated to `tfa.layers.InstanceNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
142:22: ERROR: Using member tf.contrib.layers.instance_norm in deprecated module tf.contrib. tf.contrib.layers.instance_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
146:92: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
146:92: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
148:17: INFO: Added keywords to args of function 'tf.pad'
150:17: INFO: Added keywords to args of function 'tf.pad'
151:11: ERROR: Using member tf.contrib.layers.separable_conv2d in deprecated module tf.contrib. tf.contrib.layers.separable_conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
157:28: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

159:22: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
159:22: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\net\\generator_lite.py'
 outputting to 'tf\\net\\generator_lite.py'
--------------------------------------------------------------------------------

20:17: INFO: Added keywords to args of function 'tf.pad'
22:17: INFO: Added keywords to args of function 'tf.pad'
24:17: INFO: Added keywords to args of function 'tf.pad'
25:11: ERROR: Using member tf.contrib.layers.conv2d in deprecated module tf.contrib. tf.contrib.layers.conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
30:28: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

44:12: INFO: Added keywords to args of function 'tf.pad'
45:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
47:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
47:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
47:105: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

48:15: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
48:15: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
50:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
50:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
50:91: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
50:91: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
63:23: INFO: Added keywords to args of function 'tf.shape'
63:48: INFO: Added keywords to args of function 'tf.shape'
64:13: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
74:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
104:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
117:14: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
146:20: INFO: Added keywords to args of function 'tf.shape'
146:46: INFO: Added keywords to args of function 'tf.shape'
147:13: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
153:11: ERROR: Using member tf.contrib.layers.conv2d_transpose in deprecated module tf.contrib. tf.contrib.layers.conv2d_transpose cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
158:22: WARNING: tf.contrib.layers.instance_norm requires manual check. (Manual edit required) `tf.contrib.layers.instance_norm` has been migrated to `tfa.layers.InstanceNormalization` in TensorFlow Addons. The API spec may have changed during the migration. Please see https://github.com/tensorflow/addons for more info.
158:22: ERROR: Using member tf.contrib.layers.instance_norm in deprecated module tf.contrib. tf.contrib.layers.instance_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
162:92: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
162:92: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
164:17: INFO: Added keywords to args of function 'tf.pad'
166:17: INFO: Added keywords to args of function 'tf.pad'
167:11: ERROR: Using member tf.contrib.layers.separable_conv2d in deprecated module tf.contrib. tf.contrib.layers.separable_conv2d cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
173:28: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

175:22: WARNING: tf.contrib.layers.layer_norm requires manual check. (Manual edit required) `tf.contrib.layers.layer_norm` has been deprecated, and its implementation has been integrated with `tf.keras.layers.LayerNormalization` in TensorFlow 2.0. Note that, the default value of `epsilon` is changed to `1e-3` in the new API from `1e-12`, and this may introduce numerical differences. Please check the new API and use that instead.
175:22: ERROR: Using member tf.contrib.layers.layer_norm in deprecated module tf.contrib. tf.contrib.layers.layer_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\pb_model_tool\\convert_ckpt_to_savermodel.py'
 outputting to 'tf\\pb_model_tool\\convert_ckpt_to_savermodel.py'
--------------------------------------------------------------------------------

29:13: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
30:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
32:17: INFO: Renamed 'tf.train.import_meta_graph' to 'tf.compat.v1.train.import_meta_graph'
36:12: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
37:12: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
40:18: INFO: Renamed 'tf.saved_model.builder.SavedModelBuilder' to 'tf.compat.v1.saved_model.builder.SavedModelBuilder'
43:27: INFO: Renamed 'tf.saved_model.utils.build_tensor_info' to 'tf.compat.v1.saved_model.utils.build_tensor_info'
44:29: INFO: Renamed 'tf.saved_model.utils.build_tensor_info' to 'tf.compat.v1.saved_model.utils.build_tensor_info'
45:20: INFO: Renamed 'tf.saved_model.signature_def_utils.build_signature_def' to 'tf.compat.v1.saved_model.signature_def_utils.build_signature_def'
47:52: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
48:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\pb_model_tool\\Use_pb.py'
 outputting to 'tf\\pb_model_tool\\Use_pb.py'
--------------------------------------------------------------------------------

72:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
78:25: INFO: Renamed 'tf.saved_model.loader.load' to 'tf.compat.v1.saved_model.loader.load'
78:59: INFO: Renamed 'tf.saved_model.tag_constants.SERVING' to 'tf.saved_model.SERVING'
85:16: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\adjust_brightness.py'
 outputting to 'tf\\tools\\adjust_brightness.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\concat.py'
 outputting to 'tf\\tools\\concat.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\data_loader.py'
 outputting to 'tf\\tools\\data_loader.py'
--------------------------------------------------------------------------------

79:42: INFO: Renamed 'tf.py_func' to 'tf.compat.v1.py_func'
85:20: WARNING: Changing dataset.make_one_shot_iterator() to tf.compat.v1.data.make_one_shot_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\data_mean.py'
 outputting to 'tf\\tools\\data_mean.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\edge_smooth_dir.py'
 outputting to 'tf\\tools\\edge_smooth_dir.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\get_generator_ckpt.py'
 outputting to 'tf\\tools\\get_generator_ckpt.py'
--------------------------------------------------------------------------------

22:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
32:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
33:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
39:36: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
40:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
42:18: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
43:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
43:27: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
44:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\ops.py'
 outputting to 'tf\\tools\\ops.py'
--------------------------------------------------------------------------------

11:14: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
11:14: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
19:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
33:16: INFO: Added keywords to args of function 'tf.pad'
35:16: INFO: Added keywords to args of function 'tf.pad'
38:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
38:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
40:16: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
43:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
43:23: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
43:71: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
43:71: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
47:16: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
56:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
58:36: INFO: Added keywords to args of function 'tf.shape'
58:59: INFO: Added keywords to args of function 'tf.shape'
60:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
60:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
61:16: INFO: Renamed keyword argument for tf.nn.conv2d_transpose from filter to filters
64:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
64:23: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
64:71: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
64:71: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
68:16: INFO: Renamed 'tf.layers.conv2d_transpose' to 'tf.compat.v1.layers.conv2d_transpose'
80:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
81:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
86:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
97:11: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
143:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
143:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
143:59: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
143:59: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
152:30: INFO: Added keywords to args of function 'tf.transpose'
158:43: INFO: Added keywords to args of function 'tf.transpose'
167:16: INFO: Added keywords to args of function 'tf.reduce_sum'
174:11: INFO: Added keywords to args of function 'tf.reduce_mean'
178:11: INFO: Added keywords to args of function 'tf.size'
179:35: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
182:11: INFO: tf.losses.huber_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
182:11: INFO: Renamed 'tf.losses.huber_loss' to 'tf.compat.v1.losses.huber_loss'
191:21: INFO: Added keywords to args of function 'tf.reduce_mean'
192:20: INFO: Added keywords to args of function 'tf.reduce_mean'
193:20: INFO: Added keywords to args of function 'tf.reduce_mean'
194:25: INFO: Added keywords to args of function 'tf.reduce_mean'
197:20: INFO: Added keywords to args of function 'tf.reduce_mean'
198:20: INFO: Added keywords to args of function 'tf.reduce_mean'
199:20: INFO: Added keywords to args of function 'tf.reduce_mean'
200:25: INFO: Added keywords to args of function 'tf.reduce_mean'
203:20: INFO: Added keywords to args of function 'tf.reduce_mean'
204:20: INFO: Added keywords to args of function 'tf.reduce_mean'
205:20: INFO: Added keywords to args of function 'tf.reduce_mean'
206:25: INFO: Added keywords to args of function 'tf.reduce_mean'
209:20: INFO: Added keywords to args of function 'tf.reduce_mean'
210:20: INFO: Added keywords to args of function 'tf.reduce_mean'
211:20: INFO: Added keywords to args of function 'tf.reduce_mean'
212:25: INFO: Added keywords to args of function 'tf.reduce_mean'
225:21: INFO: Added keywords to args of function 'tf.reduce_mean'
228:20: INFO: Added keywords to args of function 'tf.reduce_mean'
231:20: INFO: Added keywords to args of function 'tf.reduce_mean'
234:21: INFO: Added keywords to args of function 'tf.reduce_mean'
241:14: INFO: Added keywords to args of function 'tf.shape'
245:21: INFO: Added keywords to args of function 'tf.transpose'
245:63: INFO: Added keywords to args of function 'tf.size'
306:14: INFO: Added keywords to args of function 'tf.size'
307:14: INFO: Added keywords to args of function 'tf.size'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\utils.py'
 outputting to 'tf\\tools\\utils.py'
--------------------------------------------------------------------------------

77:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
80:53: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\vgg19.py'
 outputting to 'tf\\tools\\vgg19.py'
--------------------------------------------------------------------------------

82:15: INFO: Added keywords to args of function 'tf.nn.avg_pool'
82:15: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
82:15: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
85:15: INFO: Added keywords to args of function 'tf.nn.max_pool'
85:15: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
85:15: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
88:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
91:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
91:19: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
100:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
103:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
103:19: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
111:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\tools\\__init__.py'
 outputting to 'tf\\tools\\__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

